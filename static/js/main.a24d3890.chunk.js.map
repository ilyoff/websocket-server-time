{"version":3,"sources":["utils/Token.ts","utils/http.ts","UserContext.ts","api.ts","components/Box/Box.tsx","components/Form/Form.tsx","components/Info/Info.tsx","components/Info/useServerTime.ts","components/Layout/Layout.tsx","components/App/App.tsx","index.tsx"],"names":["Token","localStorage","getItem","this","key","value","setItem","removeItem","HTTP_STATUS_CODE","UserContext","React","createContext","isLoggedIn","setStateOnLogin","logout","http","axios","create","baseURL","headers","accept","interceptors","request","use","config","jwt","get","data","attempt","post","then","response","set","catch","error","status","BadRequest","Unauthorized","login","Promise","reject","url","Box","className","children","Form","useState","username","updateUsername","password","updatePassword","isSubmitting","setIsSubmitting","setError","useContext","isFormDisabled","handleChange","useCallback","setter","event","target","handleSubmit","e","preventDefault","api","token","description","onSubmit","name","type","onChange","disabled","Info","useWebSocket","subscribe","shouldReconnect","lastJsonMessage","readyState","timestamp","server_time","connected","ReadyState","OPEN","useServerTime","Date","toLocaleString","year","month","day","hour","minute","second","formatTime","onClick","Layout","App","setIsLoggedIn","setOnLogin","setOnLogout","contextValues","remove","setStateOnLogout","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a24d3890.chunk.js","sourcesContent":["class Token {\n    private static key: string = 'token';\n\n    static get(): string | null {\n        return localStorage.getItem(this.key);\n    }\n\n    static set(value: string) {\n        localStorage.setItem(Token.key, value)\n    }\n\n    static remove() {\n        localStorage.removeItem(Token.key);\n    }\n}\n\nexport default Token;\n\n\n","import axios from 'axios';\nimport Token from \"./Token\";\n\nexport enum HTTP_STATUS_CODE {\n    BadRequest = 400,\n    Unauthorized = 401,\n    InternalServerError = 500,\n}\n\nconst config = {\n    baseURL: 'https://work.vint-x.net/api',\n    headers: {\n        accept: 'application/json',\n    },\n};\n\nconst http = axios.create(config);\n\n\nhttp.interceptors.request.use((config) => {\n    const jwt = Token.get();\n\n    return !jwt ? config : {\n        ...config,\n        headers: {\n            ...config.headers,\n            'x-test-app-jwt-token': jwt,\n        }\n    };\n});\n\nexport default http;\n","import React from \"react\";\n\ninterface IUserContextState {\n    isLoggedIn: boolean;\n    setStateOnLogin: () => void;\n    logout: () => void;\n}\n\nconst defaultState = {\n    isLoggedIn: false,\n    setStateOnLogin: () => {},\n    logout: () => {},\n}\n\nconst UserContext = React.createContext<IUserContextState>(defaultState);\n\nexport default UserContext;\n","import {AxiosError, AxiosResponse} from \"axios\";\nimport http, { HTTP_STATUS_CODE } from \"./utils/http\";\nimport Token from \"./utils/Token\";\n\ninterface ILoginSuccessResponse extends AxiosResponse {\n    headers: {\n        [header: string]: string;\n        'x-test-app-jwt-token': string;\n    };\n    data: {\n        status: 'OK';\n    }\n}\n\ntype ILoginErrorData = {\n    code: HTTP_STATUS_CODE;\n    description: string;\n}\n\ninterface ISubscribeData {\n    url: string;\n}\n\nclass Api {\n    login(data: { username: string, password: string }, attempt: number = 3): Promise<string | ILoginErrorData> {\n        return http.post('/login', data)\n            .then((response: ILoginSuccessResponse) => {\n                const jwt = response.headers['x-test-app-jwt-token'];\n\n                Token.set(jwt);\n\n                return jwt;\n            })\n            .catch((error: AxiosError<ILoginErrorData>) => {\n                const status = error?.response?.status;\n\n                if (\n                    status !== HTTP_STATUS_CODE.BadRequest\n                    && status !== HTTP_STATUS_CODE.Unauthorized\n                    && attempt > 0\n                ) {\n                    return this.login(data, attempt - 1);\n                }\n\n                return Promise.reject(error!.response!.data);\n            });\n    }\n\n    subscribe(): Promise<ISubscribeData['url']> {\n        return http.get('/subscribe')\n            .then((response: AxiosResponse<ISubscribeData>) => {\n                return response.data.url;\n            })\n            .catch((error: AxiosError) => {\n                return Promise.reject(error.response?.status);\n            });\n    }\n}\n\nexport default new Api();\n\n\n","import React from 'react';\nimport './Box.scss';\n\ninterface IBoxProps {\n    className?: string;\n    children: React.ReactNode;\n}\n\nconst Box = ({ className, children }: IBoxProps): JSX.Element => {\n    return (\n        <article className={`box ${className}`}>\n            {children}\n        </article>\n    );\n};\n\nexport default Box;\n","import React, {useCallback, useContext, useState} from 'react';\nimport './Form.scss';\nimport api from \"../../api\";\nimport UserContext from \"../../UserContext\";\nimport Box from \"../Box/Box\";\n\nconst Form = (): JSX.Element => {\n    const [username, updateUsername] = useState('');\n    const [password, updatePassword] = useState('');\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [error, setError] = useState('');\n    const { setStateOnLogin } = useContext(UserContext);\n    const isFormDisabled = !(username && password) || isSubmitting;\n\n    const handleChange = useCallback((setter) =>\n        (event: React.ChangeEvent<HTMLInputElement>) => setter(event.target.value),\n        []\n    );\n\n    const handleSubmit = useCallback((e: React.FormEvent) => {\n        e.preventDefault();\n        setIsSubmitting(true);\n\n        api.login({ username, password })\n            .then((token) => {\n                setError('');\n                setStateOnLogin();\n            })\n            .catch(({ description }) => {\n                setError(description);\n                setIsSubmitting(false);\n            });\n    }, [username, password, setStateOnLogin]);\n\n    return (\n        <Box className=\"form\">\n            <form onSubmit={handleSubmit}>\n                <h1 className=\"form__title\">Login</h1>\n                <label className=\"form__item\">\n                    Username\n                    <input\n                        name=\"username\"\n                        type=\"text\"\n                        value={username}\n                        className=\"form__input\"\n                        onChange={handleChange(updateUsername)}\n                    />\n                </label>\n\n                <label className=\"form__item\">\n                    Password\n                    <input\n                        name=\"password\"\n                        type=\"password\"\n                        className=\"form__input\"\n                        value={password}\n                        onChange={handleChange(updatePassword)}\n                    />\n                </label>\n                <button\n                    type=\"submit\"\n                    className=\"form__submit\"\n                    disabled={isFormDisabled}\n                >\n                    Send\n                </button>\n\n                {error && <p className=\"form__error\">{error}</p>}\n            </form>\n        </Box>\n    );\n};\n\nexport default Form;\n","import React, {useContext} from 'react';\nimport './Info.scss';\nimport UserContext from \"../../UserContext\";\nimport Box from \"../Box/Box\";\nimport useServerTime from \"./useServerTime\";\n\nconst formatTime = (timestamp: number): string => {\n    try {\n\n        const date = new Date(timestamp * 1000);\n\n        return date.toLocaleString('ru', {\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric',\n        });\n    } catch (e) {\n        return '';\n    }\n}\n\nconst Info = (): JSX.Element => {\n    const { timestamp, connected } = useServerTime();\n    const { logout } = useContext(UserContext);\n\n    return (\n        <Box className=\"info\">\n            <p className=\"info__text\">\n                Status:\n                <span className={`info__status ${connected ? 'info__status--connected' : 'info__status--disconnected'}`}>\n                    {connected ? 'connected' : 'disconnected'}\n                </span>\n            </p>\n            <p className=\"info__date\">\n                {formatTime(timestamp)}\n            </p>\n\n            <button className=\"info__logout\" onClick={logout}>Logout</button>\n        </Box>\n    );\n};\n\nexport default Info;\n","import useWebSocket, { ReadyState } from 'react-use-websocket';\nimport api from '../../api';\n\nexport default function useServerTime() {\n    const { lastJsonMessage, readyState } = useWebSocket(api.subscribe, {\n        shouldReconnect: () => true,\n    });\n\n    return {\n        timestamp: lastJsonMessage?.server_time,\n        connected: readyState === ReadyState.OPEN,\n    };\n}\n","import React from 'react';\nimport './Layout.scss';\n\nfunction Layout({ children }: { children: React.ReactNode }) {\n  return (\n    <div className=\"layout\">\n        {children}\n    </div>\n  );\n}\n\nexport default Layout;\n","import React, {useCallback, useState} from 'react';\nimport Token from \"../../utils/Token\";\nimport UserContext from '../../UserContext';\nimport Form from \"../Form/Form\";\nimport Info from \"../Info/Info\";\nimport Layout from \"../Layout/Layout\";\n\nconst App = (): JSX.Element => {\n    const [isLoggedIn, setIsLoggedIn] = useState(!!Token.get());\n    const setOnLogin = useCallback(() => setIsLoggedIn(true), [setIsLoggedIn]);\n    const setOnLogout = useCallback(() => setIsLoggedIn(false), [setIsLoggedIn]);\n    const logout = useCallback(() => {\n        setOnLogout();\n        Token.remove();\n    }, [setOnLogout]);\n    const contextValues = {\n        isLoggedIn,\n        logout,\n        setStateOnLogin: setOnLogin,\n        setStateOnLogout: setOnLogout,\n    }\n\n    return (\n        <UserContext.Provider value={contextValues}>\n            <Layout>\n                {isLoggedIn ? <Info /> : <Form/>}\n            </Layout>\n        </UserContext.Provider>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}